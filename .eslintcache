[{"C:\\Projects\\Web\\weatherman\\src\\serviceWorker.js":"1","C:\\Projects\\Web\\weatherman\\src\\index.js":"2","C:\\Projects\\Web\\weatherman\\src\\App.js":"3","C:\\Projects\\Web\\weatherman\\src\\app\\store.js":"4","C:\\Projects\\Web\\weatherman\\src\\features\\header\\Header.tsx":"5","C:\\Projects\\Web\\weatherman\\src\\features\\main\\Body.tsx":"6","C:\\Projects\\Web\\weatherman\\src\\features\\header\\unitSlice.js":"7","C:\\Projects\\Web\\weatherman\\src\\features\\leafletmap\\LeafletMap.tsx":"8","C:\\Projects\\Web\\weatherman\\src\\features\\main\\citySlice.js":"9","C:\\Projects\\Web\\weatherman\\src\\api\\weatherApi.js":"10"},{"size":5141,"mtime":1610039505096,"results":"11","hashOfConfig":"12"},{"size":985,"mtime":1610055027783,"results":"13","hashOfConfig":"12"},{"size":316,"mtime":1610052194067,"results":"14","hashOfConfig":"12"},{"size":336,"mtime":1610182497550,"results":"15","hashOfConfig":"12"},{"size":7830,"mtime":1610123016708,"results":"16","hashOfConfig":"12"},{"size":3409,"mtime":1610199804436,"results":"17","hashOfConfig":"12"},{"size":769,"mtime":1610122246661,"results":"18","hashOfConfig":"12"},{"size":6307,"mtime":1610222049932,"results":"19","hashOfConfig":"12"},{"size":2828,"mtime":1610199683524,"results":"20","hashOfConfig":"12"},{"size":1175,"mtime":1610183572027,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1338vqq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Projects\\Web\\weatherman\\src\\serviceWorker.js",[],["45","46"],"C:\\Projects\\Web\\weatherman\\src\\index.js",[],"C:\\Projects\\Web\\weatherman\\src\\App.js",[],"C:\\Projects\\Web\\weatherman\\src\\app\\store.js",[],"C:\\Projects\\Web\\weatherman\\src\\features\\header\\Header.tsx",[],["47","48"],"C:\\Projects\\Web\\weatherman\\src\\features\\main\\Body.tsx",["49"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  Box,\r\n  Paper,\r\n  Theme,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { BaseCSSProperties } from \"@material-ui/core/styles/withStyles\";\r\nimport {\r\n  faArrowCircleLeft,\r\n  faArrowCircleRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport LeafletMap from \"../leafletmap/LeafletMap\";\r\n\r\nconst Body = (props: any) => {\r\n  const styles = useStyles({} as StyleProps);\r\n  const dispatch = useDispatch();\r\n\r\n  const [panelDirection, setPanelDirection] = useState(\"middle\");\r\n\r\n  const onLeftClick = () => {\r\n    if (panelDirection === \"middle\") {\r\n      setPanelDirection(\"left\");\r\n    }\r\n    if (panelDirection === \"right\") {\r\n      setPanelDirection(\"middle\");\r\n    }\r\n  };\r\n\r\n  const onRightClick = () => {\r\n    if (panelDirection === \"middle\") {\r\n      setPanelDirection(\"right\");\r\n    }\r\n    if (panelDirection === \"left\") {\r\n      setPanelDirection(\"middle\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={styles.bodyContainer}>\r\n      <Paper\r\n        className={`${styles.paperContainer} ${\r\n          panelDirection !== \"left\" ? styles.fullWidth : \"\"\r\n        }`}\r\n        elevation={4}\r\n      >\r\n        {panelDirection !== \"left\" && <LeafletMap />}\r\n      </Paper>\r\n      <Box className={styles.controlsContainer}>\r\n        {panelDirection !== \"left\" && (\r\n          <Button\r\n            className={styles.collapseButton}\r\n            onClick={() => onLeftClick()}\r\n          >\r\n            <FontAwesomeIcon icon={faArrowCircleLeft} size=\"lg\" />\r\n          </Button>\r\n        )}\r\n        {panelDirection !== \"right\" && (\r\n          <Button\r\n            className={styles.collapseButton}\r\n            onClick={() => onRightClick()}\r\n          >\r\n            <FontAwesomeIcon icon={faArrowCircleRight} size=\"lg\" />\r\n          </Button>\r\n        )}\r\n      </Box>\r\n\r\n      <Paper\r\n        className={`${styles.paperContainer} ${\r\n          panelDirection !== \"right\" ? styles.width60 : \"\"\r\n        } ${panelDirection === \"left\" ? styles.fullWidth : \"\"}`}\r\n        elevation={4}\r\n      >\r\n        {panelDirection !== \"right\" && <div>This is the second div</div>}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(Body);\r\n\r\ninterface StyleProps {\r\n  bodyContainer: BaseCSSProperties;\r\n  paperContainer: BaseCSSProperties;\r\n  collapseButton: BaseCSSProperties;\r\n  controlsContainer: BaseCSSProperties;\r\n  fullWidth: BaseCSSProperties;\r\n  width60: BaseCSSProperties;\r\n}\r\n\r\nlet baseStyle: StyleProps = {\r\n  bodyContainer: {\r\n    margin: 20,\r\n    border: \"solid 1px lightgrey\",\r\n    display: \"flex\",\r\n    padding: 16,\r\n    justifyContent: \"space-between\",\r\n    borderRadius: 2,\r\n    minHeight: \"80vh\",\r\n  },\r\n  width60: {\r\n    width: \"60%\",\r\n    backgroundColor: \"initial !important\",\r\n  },\r\n  paperContainer: {\r\n    padding: 12,\r\n    backgroundColor: \"lightGrey\",\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n    backgroundColor: \"initial !important\",\r\n  },\r\n  collapseButton: {\r\n    fontSize: 15,\r\n    color: \"grey\",\r\n    zIndex: 10,\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  controlsContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignSelf: \"center\",\r\n  },\r\n};\r\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);\r\n","C:\\Projects\\Web\\weatherman\\src\\features\\header\\unitSlice.js",[],"C:\\Projects\\Web\\weatherman\\src\\features\\leafletmap\\LeafletMap.tsx",["50","51","52"],"C:\\Projects\\Web\\weatherman\\src\\features\\main\\citySlice.js",[],"C:\\Projects\\Web\\weatherman\\src\\api\\weatherApi.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":21,"column":9,"nodeType":"59","messageId":"60","endLine":21,"endColumn":17},{"ruleId":"57","severity":1,"message":"61","line":52,"column":9,"nodeType":"59","messageId":"60","endLine":52,"endColumn":21},{"ruleId":"62","severity":1,"message":"63","line":67,"column":6,"nodeType":"64","endLine":67,"endColumn":32,"suggestions":"65"},{"ruleId":"57","severity":1,"message":"66","line":74,"column":9,"nodeType":"59","messageId":"60","endLine":74,"endColumn":15},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"@typescript-eslint/no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'selectedCity' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'doFetchWeatherInfo', and 'selectedUnit'. Either include them or remove the dependency array.","ArrayExpression",["69"],"'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [dispatch, doFetchWeatherInfo, selectedPositionWithZoom, selectedUnit]",{"range":"72","text":"73"},[1800,1826],"[dispatch, doFetchWeatherInfo, selectedPositionWithZoom, selectedUnit]"]